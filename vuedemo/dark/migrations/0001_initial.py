# Generated by Django 2.2.7 on 2019-12-10 18:19

import ckeditor_uploader.fields
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='名称')),
                ('img_url', models.ImageField(upload_to='', verbose_name='图片')),
            ],
            options={
                'verbose_name': '轮播',
                'verbose_name_plural': '轮播',
            },
        ),
        migrations.CreateModel(
            name='EmailCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='验证码')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '邮箱验证码',
                'verbose_name_plural': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('no', models.CharField(max_length=200, verbose_name='商品编号')),
                ('zhaiyao', models.CharField(max_length=500, verbose_name='摘要')),
                ('click', models.IntegerField(verbose_name='点击数')),
                ('img_url', models.ImageField(upload_to='', verbose_name='图片链接')),
                ('content', models.TextField(verbose_name='内容')),
                ('sell_price', models.CharField(max_length=20, verbose_name='售价')),
                ('market_price', models.CharField(max_length=20, verbose_name='定价')),
                ('stock_quantity', models.IntegerField(verbose_name='库存数量')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('zhaiyao', models.CharField(max_length=500, verbose_name='摘要')),
                ('click', models.IntegerField(verbose_name='点击数')),
                ('img_url', models.ImageField(upload_to='', verbose_name='图片链接')),
                ('content', models.TextField(verbose_name='内容')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '资讯',
                'verbose_name_plural': '资讯',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='图片标题')),
                ('click', models.IntegerField(verbose_name='点击次数')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('img_url', models.ImageField(upload_to='', verbose_name='图片链接')),
                ('zhaiyao', models.CharField(max_length=500, verbose_name='摘要')),
                ('content', models.TextField(verbose_name='详情描述')),
            ],
            options={
                'verbose_name': '图片',
                'verbose_name_plural': '图片',
            },
        ),
        migrations.CreateModel(
            name='PictureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='分类名称')),
            ],
            options={
                'verbose_name': '图片分类',
                'verbose_name_plural': '图片分类',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='品牌')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '品牌',
                'verbose_name_plural': '品牌',
            },
        ),
        migrations.CreateModel(
            name='ShopCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='商品名')),
                ('sell_price', models.CharField(max_length=20, verbose_name='售价')),
                ('click', models.IntegerField(verbose_name='点击数')),
                ('thumb_path', models.ImageField(upload_to='', verbose_name='图片链接')),
                ('stock_quantity', models.IntegerField(verbose_name='库存数量')),
                ('good_no', models.CharField(max_length=200, verbose_name='商品编号')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('click', models.IntegerField(verbose_name='点击次数')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('url', models.FileField(upload_to='', verbose_name='视频链接')),
                ('content', models.TextField(verbose_name='简介')),
            ],
            options={
                'verbose_name': '视频专区',
                'verbose_name_plural': '视频专区',
            },
        ),
        migrations.CreateModel(
            name='PictureComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='匿名用户')),
                ('content', models.CharField(max_length=500, verbose_name='评论')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dark.Picture', verbose_name='图片')),
            ],
            options={
                'verbose_name': '图片评论',
                'verbose_name_plural': '图片评论',
            },
        ),
        migrations.AddField(
            model_name='picture',
            name='picture_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dark.PictureType', verbose_name='图片分类'),
        ),
        migrations.CreateModel(
            name='NewsComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='匿名用户')),
                ('content', models.CharField(max_length=500, verbose_name='评论')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dark.News', verbose_name='资讯')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
            },
        ),
        migrations.CreateModel(
            name='GoodsPresentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='图文介绍')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dark.Goods', verbose_name='商品')),
            ],
            options={
                'verbose_name': '商品图文介绍',
                'verbose_name_plural': '商品图文介绍',
            },
        ),
        migrations.CreateModel(
            name='GoodsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_url', models.ImageField(upload_to='', verbose_name='图片链接')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dark.Goods', verbose_name='商品')),
            ],
            options={
                'verbose_name': '商品图片',
                'verbose_name_plural': '商品图片',
            },
        ),
        migrations.CreateModel(
            name='GoodsComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='匿名用户')),
                ('content', models.CharField(max_length=500, verbose_name='评论')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dark.Goods', verbose_name='商品')),
            ],
            options={
                'verbose_name': '商品评论',
                'verbose_name_plural': '商品评论',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(blank=True, max_length=10, verbose_name='昵称')),
                ('image', models.ImageField(default='media/default.jpg', upload_to='', verbose_name='头像')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='male', max_length=10, verbose_name='性别')),
                ('is_platform', models.BooleanField(default=False, verbose_name='是否平台用户')),
                ('date_of_birth', models.DateField(default='2000-1-1', verbose_name='出生年月')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='国家')),
                ('province', models.CharField(blank=True, max_length=50, null=True, verbose_name='省份')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='城市')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='详细地址')),
                ('remark', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '会员',
                'verbose_name_plural': '会员',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MemberProxy',
            fields=[
            ],
            options={
                'verbose_name': '会员用户',
                'verbose_name_plural': '会员用户',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dark.user',),
        ),
        migrations.CreateModel(
            name='PlatformProxy',
            fields=[
            ],
            options={
                'verbose_name': '平台管理员',
                'verbose_name_plural': '平台管理员',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dark.user',),
        ),
    ]
